- name: Install Docker and Docker Compose
  hosts: all
  become: yes
  vars:
    repo_name: CICD-Docker-for-python-webapp
    repo_url: https://github.com/damian-andrzej/CICD-Docker-for-python-webapp.git
    app_dir: /home/ec2-user/app
  tasks:
    - name: Update apt packages
      yum:
        update_cache: yes

    - name: Install required system packages
      yum:
        name: 
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - git
          - unzip
        state: present

    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to the docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Download latest Docker Compose binary
      get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        mode: 'u+x,g+x'

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version
      changed_when: false

    - name: Print Docker version
      debug:
        msg: "Installed Docker version: {{ docker_version.stdout }}"

    - name: Print Docker Compose version
      debug:
        msg: "Installed Docker Compose version: {{ docker_compose_version.stdout }}"

    - name: Find all files and directories in the target directory
      find:
        paths: "{{ app_dir }}"  # Replace with your target directory path
        recurse: yes  # Search recursively
        file_type: file  # Find all files
      register: files_to_delete

    - name: Remove found files
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ files_to_delete.files }}"
      when: files_to_delete.matched > 0

    - name: Find hidden files (files starting with a dot)
      find:
        paths: "{{ app_dir }}"  # Replace with your directory
        recurse: yes
        file_type: file
        patterns: ".*"  # Matches files starting with a dot
      register: hidden_files

    - name: Remove hidden files
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ hidden_files.files }}"
      when: hidden_files.matched > 0

    - name: Find and remove subdirectories
      find:
        paths: "{{ app_dir }}"  # Replace with your target directory path
        recurse: yes
        file_type: directory  # Find all directories
      register: dirs_to_delete

    - name: Remove found directories
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ dirs_to_delete.files }}"
      when: dirs_to_delete.matched > 0

    - name: Ensure the directory exists
      file:
        path: "{{ app_dir }}"
        state: directory

    - name: Print Repository URL
      debug:
        msg: "The repository URL is {{ repo_url }}"

    - name: Check if the directory exists
      stat:
        path: "{{ app_dir + '/' + repo_name }}"
      register: dir_status

    - name: Clone repository if the directory doesnt exist
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: "main"
      when: dir_status.stat.exists == False

    - name: Pull the latest changes if the directory exists
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: "main"
        update: yes
      when: dir_status.stat.exists == True

    - name: Clone or update the repository
      git:
        repo: "{{ repo_url }}"  # Repository URL
        dest: "{{ app_dir }}"                            # Target directory
        version: "main"                                  # Branch name (default: main)
        update: yes
        
    # Run docker-compose up
    - name: Start containers using docker-compose
      command: docker-compose up -d
      args:
        chdir: /home/ec2-user/app
    
